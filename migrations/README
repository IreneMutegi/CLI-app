# Phase 3 CLI Project 

Hotel Management System - CLI
A command-line interface (CLI) application that manages a hotel by tracking rooms, guests, and amenities using SQLAlchemy ORM. The application allows users to create, update, delete, and view rooms, guests, and amenities, all while interacting with a database.

Features
Room Management: Create, update, delete, and list rooms in the hotel.
Guest Management: Create, update, delete, and list guests. Assign guests to rooms and amenities.
Amenity Management: Create, update, delete, and list amenities available in the hotel.
Database Initialization: Initializes a SQLite database using SQLAlchemy.
Room and Amenity Assignment: Assign guests to specific rooms and amenities.
Interactive CLI: Simple text-based interface for easy navigation.
.
.
├── Pipfile
├── Pipfile.lock
├── __pycache__
│   ├── models.cpython-310.pyc
│   └── models.cpython-38.pyc
├── alembic.ini
├── cli.py
├── db.py
├── guests.db
├── migrations
│   ├── README
│   ├── __pycache__
│   │   └── env.cpython-310.pyc
│   ├── env.py
│   ├── script.py.mako
│   └── versions
│       ├── __pycache__
│       │   └── ed68c4eaa43d_create_tables_for_guests_rooms_and_.cpython-310.pyc
│       └── ed68c4eaa43d_create_tables_for_guests_rooms_and_.py
└── models.py


CRUD Operations:
Create: Functions such as create_room(), create_guest(), and create_amenity() handle adding new data to the database.
Update: Functions like update_room() and update_guest() allow modification of existing data, based on user input.
Delete: Functions such as delete_room(), delete_guest(), and delete_amenity() enable the user to remove records from the database.
List: Functions like list_rooms(), list_amenities(), and list_guests() display lists of records stored in the database.
View by Room/Amenity: Functions view_guests_by_room() and view_guests_by_amenity() allow the user to filter and view guests based on room or amenity.